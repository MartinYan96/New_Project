{"version":3,"file":"static/js/847.125b3f29.chunk.js","mappings":"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","sources":["component/productsList/SortProducts.js","component/productsList/FilteredPriceProductList.js","component/productsList/ProductFilters.js","component/productsList/ProductsSection.js"],"sourcesContent":["import './sortProducts.scss'\nimport './sortProducts.media.scss'\nimport { BsSortDown } from \"react-icons/bs\";\nimport { BsSortDownAlt } from \"react-icons/bs\";\nimport { BsFilterRight } from \"react-icons/bs\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useState } from 'react';\nimport { closeAndOpenFiltersBar } from '../redux/closeAndOpenFiltersBar';\n\nconst SortProduct = ({ filteredProducts, setFilteredProducts }) => {\n\n    const sortCategory = useSelector(state => state.language.language.sortProducts.sortProductsCategorie)\n    const dispatch = useDispatch()\n\n\n\n    const [sortActive, setSortActive] = useState(0)\n    // const [recommendedActive, setRecommendedActive] = useState(false)\n    const [maxMinPriceActive, setMaxMinPriceActive] = useState(false)\n    const [increasingTheTimeActive, setIncreasingTheTime] = useState(false)\n\n    const sortCategoryAndSortIcons = sortCategory.map(sortCategory => {\n        return (\n            {\n                name: sortCategory,\n                iconMaxMin: <BsSortDownAlt />,\n                iconMinMax: <BsSortDown />,\n                filterIcon: <BsFilterRight />\n            }\n        )\n    })\n\n\n    const recommended = [...filteredProducts].sort((a, b) => b.recommended - a.recommended);\n    const minMaxPrice = [...filteredProducts].sort((a, b) => a.price - b.price);\n    const maxMinPrice = [...filteredProducts].sort((a, b) => b.price - a.price);\n    const increasingTheTimeNew = [...filteredProducts].sort((a, b) => a.id.localeCompare(b.id));\n    const increasingTheTimeOld = [...filteredProducts].sort((a, b) => b.id.localeCompare(a.id));\n\n\n    const sortingProducts = (index) => {\n        sortActive ? setSortActive(index) : setSortActive(index)\n        if(sortActive === index){\n            setFilteredProducts(recommended)\n        }\n        if (index === 0) {\n            setFilteredProducts(recommended)\n        }\n\n        if (index === 2 && !maxMinPriceActive) {\n            setFilteredProducts(minMaxPrice)\n            setMaxMinPriceActive(true)\n        }\n        else if (index === 2 && maxMinPriceActive) {\n            setFilteredProducts(maxMinPrice)\n            setMaxMinPriceActive(false)\n        }\n\n        if (index === 3 && !increasingTheTimeActive) {\n            setFilteredProducts(increasingTheTimeNew)\n            setIncreasingTheTime(true)\n        }\n        else if (index === 3 && increasingTheTimeActive) {\n            setFilteredProducts(increasingTheTimeOld)\n            setIncreasingTheTime(false)\n        }\n    }\n\n\n    return (\n        <div className='sortProduct'>\n            {sortCategoryAndSortIcons.map((sortCategory, index) => {\n                return (\n                    <div key={sortCategory.name} className={sortActive === index && index !== 4 ? 'sortButton active' : 'sortButton'} onClick={() => {\n                        sortingProducts(index)\n                        return index === 4 ? dispatch(closeAndOpenFiltersBar()) : ''\n                    }}>\n                        {sortCategory.name}\n                        <div className='sortIcon' id={`sortIcon${index}`}>\n                            {\n                                (index === 2 && maxMinPriceActive || index === 3 && increasingTheTimeActive ? sortCategory.iconMaxMin : index !== 4 && sortCategory.iconMinMax) ||\n                                (index !== 4 ? sortCategory.iconMaxMin : sortCategory.filterIcon)\n                            }\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default SortProduct","import ProductCard from \"../productCard/ProductCard\"\n\nconst FilteredPriceProductList = ({recommended , minPriceToggle,maxPriceToggle}) => {\n    return recommended.map(product => {\n        if ((product.price >= minPriceToggle) || (product.price >= minPriceToggle)) {\n            if ((product.price <= maxPriceToggle) || (product.price <= maxPriceToggle)) {\n                return (\n                    <ProductCard key={product.id} data={product} />\n                )\n            }\n        }\n    })\n}\n\n\nexport default FilteredPriceProductList","import './productFilters.scss'\nimport './productFilters.media.scss'\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeAndOpenFiltersBar } from '../redux/closeAndOpenFiltersBar';\n\nconst ProductFilters = ({ product, productsThisPage, categorie, filteredProducts, setFilteredProducts, setProduct, onSaleInput, onNewInput, setMinPriceProducts, setMaxPriceProducts }) => {\n    const openAndCloseFiltersBar = useSelector(state => state.filters.filterBarActive)\n    const [onSale, setOnSale] = useState(false);\n    const [onNew, setOnNew] = useState(false);\n\n    const saleProducts = product.filter(product => product.sale !== '')\n    const newProducts = product.filter(product => product.news)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        setProduct(productsThisPage)\n        setOnSale(false)\n        setOnNew(false)\n    }, [categorie])\n\n    useEffect(() => {\n        openAndCloseFiltersBar ? document.body.style.overflow = 'hidden' : document.body.style.overflow = 'auto'\n    }, [openAndCloseFiltersBar])\n\n    function productfiltering() {\n        if (onNew) {\n            return newProducts\n        }\n        else if (onSale) {\n            return saleProducts\n        }\n        else {\n            return productsThisPage\n        }\n\n    }\n\n    const onSaleProductsActive = () => {\n        setOnNew(false)\n        setOnSale(true)\n    }\n    const onNewProductsActive = () => {\n        setOnNew(true)\n        setOnSale(false)\n    }\n\n    useEffect(() => {\n        setFilteredProducts(productfiltering())\n    }, [onSale, onNew, categorie])\n\n    const prices = filteredProducts.map(prices => {\n        return prices.price\n    })\n\n    const minPrice = Math.min(...prices);\n    const maxPrice = Math.max(...prices);\n\n    const [maxPriceToggle, setMaxPriceToggle] = useState(maxPrice);\n    const [minPriceToggle, setMinPriceToggle] = useState(minPrice);\n\n    useEffect(() => {\n        setMaxPriceProducts(maxPriceToggle)\n        setMinPriceProducts(minPriceToggle)\n    }, [minPriceToggle, maxPriceToggle])\n\n    useEffect(() => {\n        setMaxPriceToggle(maxPrice)\n    }, [maxPrice])\n\n    useEffect(() => {\n        setMinPriceToggle(minPrice)\n    }, [minPrice])\n\n\n    const handleMaxPriceChange = (event) => {\n        setMaxPriceToggle(event.target.value);\n    };\n\n    const handleMinPriceChange = (event) => {\n        setMinPriceToggle(event.target.value);\n    };\n    const [selectedSubcategories, setSelectedSubcategories] = useState([]);\n\n\n    const handleSubcategoryChange = (subcategory) => {\n        if (selectedSubcategories.includes(subcategory)) {\n            setSelectedSubcategories(selectedSubcategories.filter((item) => item !== subcategory));\n        } else {\n            setSelectedSubcategories([...selectedSubcategories, subcategory]);\n        }\n    };\n\n    const filteredProduct = selectedSubcategories.length > 0\n        ? productsThisPage.filter((product) => (selectedSubcategories.includes(product.categorie.subcategorie.arm)) || (selectedSubcategories.includes(product.categorie.subcategorie.rus)))\n        : productsThisPage;\n\n\n    useEffect(() => {\n        setFilteredProducts(filteredProduct)\n    }, [selectedSubcategories])\n\n\n    return (\n        <>\n            <div className={!openAndCloseFiltersBar ? 'effect' : 'effect active'} onClick={() => dispatch(closeAndOpenFiltersBar())}></div>\n            <div className={!openAndCloseFiltersBar ? 'filtersBar ' : 'filtersBar active'} >\n                <div className='productFilters'>\n                    <div className='productPriceFilter'>\n                        <h3 className='productFiltersTitle'>PRICE</h3>\n                        <div className='tooltipPrice'>\n                            <p className='tooltipPriceMin'>от</p>\n                            <p className='tooltipPriceMax'>до</p>\n                        </div>\n                        <div className='togglePriceInputs'>\n                            <input type=\"text\" placeholder={onSale && filteredProducts.length === 0 ? 0 : minPriceToggle} min={minPrice} max={maxPrice} onChange={handleMinPriceChange} />\n                            <input type=\"text\" placeholder={onSale && filteredProducts.length === 0 ? 0 : maxPriceToggle} min={minPrice} max={maxPrice} onChange={handleMaxPriceChange} />\n                        </div>\n                    </div>\n                    {onSaleInput ? '' :\n                        <label className='onSaleInput'  >\n                            <div>\n                                <h3 className='productFiltersTitle'>ON SALE</h3>\n                                <input type=\"checkbox\" checked={onSale} onChange={() => !onSale ? onSaleProductsActive() : setOnSale(false)} />\n                            </div>\n                        </label>\n                    }\n                    {onNewInput ? '' :\n                        <label className='onNewInput' >\n                            <div>\n                                <h3 className='productFiltersTitle'>NEW</h3>\n                                <input type=\"checkbox\" checked={onNew} onChange={() => !onNew ? onNewProductsActive() : setOnNew(false)} />\n                            </div>\n                        </label>\n                    }\n\n                    <div className='subCategoriesToggleList'>\n                        <h3 className='productFiltersTitle'>CATEGORY</h3>\n                        {categorie.submenu.map((submenu, index) => {\n                            return (\n                                <div className='subCategoriesList' key={submenu.categorie}>\n                                    <div className='subCategories' style={{ display: 'flex' }}>\n                                        <label className='subCategorieInputs'>\n                                            <input type=\"checkbox\"\n                                                value={submenu.categorie}\n                                                checked={selectedSubcategories.includes(submenu.categorie)}\n                                                onChange={() => handleSubcategoryChange(submenu.categorie)}\n                                            />\n                                            {submenu.categorie}\n                                        </label>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default ProductFilters","import './productsSection.scss'\nimport './productsSection.media.scss'\nimport { useEffect, useState } from 'react';\nimport SortProduct from './SortProducts';\nimport data from '../../resources/data/data';\nimport FilteredPriceProductList from './FilteredPriceProductList';\nimport ProductFilters from './ProductFilters'\nimport { useSelector } from 'react-redux';\n\n\n\nconst ProductsSection = ({ categorie,setPage }) => {\n\n    const { products } = data().data\n    const [onSaleInput, setOnSaleInput] = useState(false);\n    const [onNewInput, setonNewInput] = useState(false);\n    const [minPriceProducts, setMinPriceProducts] = useState();\n    const [maxPriceProducts, setMaxPriceProducts] = useState();\n    const openAndCloseFiltersBar = useSelector(state => state.filters.filterBarActive)\n    const productsThisPage = products.filter(product => {\n        if (categorie.categorie === 'ԶԵՂՉ' || categorie.categorie === 'РАСПРОДАЖА') {\n            return product.sale !== ''\n        }\n        else if (categorie.categorie === 'ՆՈՐ' || categorie.categorie === 'НОВЫЕ') {\n            return product.news\n        }\n        else {\n            return (\n                product.categorie.arm === categorie.categorie ||\n                product.categorie.rus === categorie.categorie\n            )\n        }\n    })\n\n\n    useEffect(() => {\n        categorie.categorie === 'ԶԵՂՉ' || categorie.categorie === 'РАСПРОДАЖА' ? setOnSaleInput(true) : setOnSaleInput(false)\n        categorie.categorie === 'ՆՈՐ' || categorie.categorie === 'НОВЫЕ' ? setonNewInput(true) : setonNewInput(false)\n    }, [categorie])\n\n\n    const [product, setProduct] = useState(productsThisPage);\n    const [filteredProducts, setFilteredProducts] = useState(productsThisPage)\n\n\n\n    const recommended = [...filteredProducts]\n\n    return (\n        <>\n            <ProductFilters setFilteredProducts={setFilteredProducts} filteredProducts={filteredProducts} categorie={categorie} productsThisPage={productsThisPage} product={product} setProduct={setProduct} onSaleInput={onSaleInput} onNewInput={onNewInput} setMinPriceProducts={setMinPriceProducts} setMaxPriceProducts={setMaxPriceProducts} />\n            <section className={openAndCloseFiltersBar ? 'productSection active' : 'productSection'}>\n                <div className='productList'>\n                    <SortProduct filteredProducts={filteredProducts} setFilteredProducts={setFilteredProducts} />\n                    <div className='products'>\n                        <FilteredPriceProductList recommended={recommended} minPriceToggle={minPriceProducts} maxPriceToggle={maxPriceProducts} />\n                    </div>\n                    <button className='button'>TRY IT</button>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default ProductsSection\n\n\n"],"names":["_ref","filteredProducts","setFilteredProducts","sortCategory","useSelector","state","language","sortProducts","sortProductsCategorie","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","sortActive","setSortActive","_useState3","_useState4","maxMinPriceActive","setMaxMinPriceActive","_useState5","_useState6","increasingTheTimeActive","setIncreasingTheTime","sortCategoryAndSortIcons","map","name","iconMaxMin","_jsx","BsSortDownAlt","iconMinMax","BsSortDown","filterIcon","BsFilterRight","recommended","_toConsumableArray","sort","a","b","minMaxPrice","price","maxMinPrice","increasingTheTimeNew","id","localeCompare","increasingTheTimeOld","className","children","index","_jsxs","onClick","sortingProducts","closeAndOpenFiltersBar","concat","minPriceToggle","maxPriceToggle","product","ProductCard","data","productsThisPage","categorie","setProduct","onSaleInput","onNewInput","setMinPriceProducts","setMaxPriceProducts","openAndCloseFiltersBar","filters","filterBarActive","onSale","setOnSale","onNew","setOnNew","saleProducts","filter","sale","newProducts","news","useEffect","document","body","style","overflow","prices","minPrice","Math","min","apply","maxPrice","max","setMaxPriceToggle","_useState7","_useState8","setMinPriceToggle","_useState9","_useState10","selectedSubcategories","setSelectedSubcategories","filteredProduct","length","includes","subcategorie","arm","rus","_Fragment","type","placeholder","onChange","event","target","value","checked","submenu","display","subcategory","item","products","setPage","setOnSaleInput","setonNewInput","minPriceProducts","maxPriceProducts","_useState11","_useState12","ProductFilters","SortProduct","FilteredPriceProductList"],"sourceRoot":""}